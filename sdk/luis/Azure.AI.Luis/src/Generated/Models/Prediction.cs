// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Luis.Models
{
    /// <summary> Represents the prediction of a query. </summary>
    public partial class Prediction
    {
        /// <summary> Initializes a new instance of Prediction. </summary>
        /// <param name="topIntent"> The name of the top scoring intent. </param>
        /// <param name="intents"> A dictionary representing the intents that fired. </param>
        /// <param name="entities"> A dictionary representing the entities that fired. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="topIntent"/>, <paramref name="intents"/>, or <paramref name="entities"/> is null. </exception>
        internal Prediction(string topIntent, IReadOnlyDictionary<string, Intent> intents, IReadOnlyDictionary<string, object> entities)
        {
            if (topIntent == null)
            {
                throw new ArgumentNullException(nameof(topIntent));
            }
            if (intents == null)
            {
                throw new ArgumentNullException(nameof(intents));
            }
            if (entities == null)
            {
                throw new ArgumentNullException(nameof(entities));
            }

            TopIntent = topIntent;
            Intents = intents;
            Entities = entities;
        }

        /// <summary> Initializes a new instance of Prediction. </summary>
        /// <param name="alteredQuery"> The query after spell checking. Only set if spell check was enabled and a spelling mistake was found. </param>
        /// <param name="topIntent"> The name of the top scoring intent. </param>
        /// <param name="intents"> A dictionary representing the intents that fired. </param>
        /// <param name="entities"> A dictionary representing the entities that fired. </param>
        /// <param name="sentiment"> The result of the sentiment analysis. </param>
        internal Prediction(string alteredQuery, string topIntent, IReadOnlyDictionary<string, Intent> intents, IReadOnlyDictionary<string, object> entities, Sentiment sentiment)
        {
            AlteredQuery = alteredQuery;
            TopIntent = topIntent;
            Intents = intents;
            Entities = entities;
            Sentiment = sentiment;
        }

        /// <summary> The query after spell checking. Only set if spell check was enabled and a spelling mistake was found. </summary>
        public string AlteredQuery { get; }
        /// <summary> The name of the top scoring intent. </summary>
        public string TopIntent { get; }
        /// <summary> A dictionary representing the intents that fired. </summary>
        public IReadOnlyDictionary<string, Intent> Intents { get; }
        /// <summary> A dictionary representing the entities that fired. </summary>
        public IReadOnlyDictionary<string, object> Entities { get; }
        /// <summary> The result of the sentiment analysis. </summary>
        public Sentiment Sentiment { get; }
    }
}
